diff --git a/build_config.h b/build_config.h
index d3cdd2db4..18f37cbbb 100644
--- a/build_config.h
+++ b/build_config.h
@@ -166,6 +166,20 @@
 #define ARCH_CPU_32_BITS 1
 #define ARCH_CPU_BIG_ENDIAN 1
 #endif
+#elif defined(__riscv) || defined(__riscv__)
+#if __riscv_xlen == 64
+#define ARCH_CPU_RISCV_FAMILY 1
+#define ARCH_CPU_RISCV64 1
+#define ARCH_CPU_64_BITS 1
+#define ARCH_CPU_LITTLE_ENDIAN 1
+#elif __riscv_xlen == 32
+#define ARCH_CPU_RISCV_FAMILY 1
+#define ARCH_CPU_RISCV32 1
+#define ARCH_CPU_32_BITS 1
+#define ARCH_CPU_LITTLE_ENDIAN 1
+#else
+#error "Cannot detect Riscv's bitwidth"
+#endif
 #else
 #error Please add support for your architecture in build/build_config.h
 #endif
diff --git a/toolchain/linux/BUILD.gn b/toolchain/linux/BUILD.gn
index fa8b17e9d..f275e4dc5 100644
--- a/toolchain/linux/BUILD.gn
+++ b/toolchain/linux/BUILD.gn
@@ -65,6 +65,24 @@ gcc_toolchain("arm") {
   }
 }

+gcc_toolchain("riscv64") {
+  toolprefix = "riscv64-unknown-linux-gnu-"
+
+  cc = "${toolprefix}gcc"
+  cxx = "${toolprefix}g++"
+
+  ar = "${toolprefix}ar"
+  ld = cxx
+  readelf = "${toolprefix}readelf"
+  nm = "${toolprefix}nm"
+
+  toolchain_args = {
+    current_cpu = "riscv64"
+    current_os = "linux"
+    is_clang = false
+  }
+}
+
 clang_toolchain("clang_x86") {
   # Output linker map files for binary size analysis.
   enable_linker_map = true
@@ -136,6 +154,14 @@ clang_toolchain("clang_x64_v8_arm64") {
   }
 }

+clang_toolchain("clang_x64_v8_riscv64") {
+  toolchain_args = {
+    current_cpu = "x64"
+    v8_current_cpu = "riscv64"
+    current_os = "linux"
+  }
+}
+
 clang_toolchain("clang_x64_v8_mips64el") {
   toolchain_args = {
     current_cpu = "x64"
